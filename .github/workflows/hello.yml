name: CPU

# Only run on branches (e.g. not tags)
on:
  push:
  workflow_dispatch:

jobs:
  hello:
    name: Hello on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-ppc64le, ubuntu-24.04-ppc64le-p10, ubuntu-24.04-s390x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Hello
        run: |

          echo "Hello from `arch`"
          lscpu
          echo "nproc"
          nproc
          nproc --all
          grep . /sys/devices/system/cpu/{present,possible,online,offline}


      - name: ruby
        run: |
          echo "before"
          echo "================================================================"
          id 
          id -u
          id -g

          sudo usermod -g "$(id -g)" runner
          
          
          cat <<EOF > groups.c
          #include <stdio.h>
          #include <stdlib.h>
          #include <pwd.h>
          
          int main(int argc, char *argv[])
          {
              int status = EXIT_SUCCESS;
              uid_t uid;
              struct passwd *pw;
          
              if (argc < 2) {
                  status = EXIT_FAILURE;
                  fprintf(stderr, "An argument is required.\n");
                  goto end;
              }
              uid = (uid_t)strtol(argv[1], NULL, 10);
              printf("INFO: Input uid: [%d]\n", uid);
              pw = getpwuid(uid);
              printf("INFO: uid: %d\n", pw->pw_uid);
              printf("INFO: gid: %d\n", pw->pw_gid);
          end:
              return status;
          }
          EOF

          echo "after"
          echo "================================================================"
          id
          id -u
          id -g

          echo "c program"
          echo "================================================================"
          gcc groups.c -o gr
          ./gr "$(id -u)"

          
